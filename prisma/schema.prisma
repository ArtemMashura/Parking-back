// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
model ParkingPlace {
  id           String        @id @default(dbgenerated("gen_random_uuid()"))
  name         String
  coordX       Float
  coordY       Float
  parkingspots ParkingSpot[]

  @@unique(name: "coords", fields: [coordX, coordY])
}

model ParkingSpot {
  id              String       @id @default(dbgenerated("gen_random_uuid()"))
  number          Int
  floor           Int
  pricePerHour    Decimal @db.Decimal(5, 2)
  parkingLocation ParkingPlace @relation(fields: [parkingPlaceId], references: [id], onDelete: Cascade)
  parkingPlaceId  String
  pendingOrders   Orders[]

  @@unique(name: "duplication_prevention", fields: [number, floor, parkingPlaceId])
}

// model Orders {
//   id              String      @id @default(dbgenerated("gen_random_uuid()"))
//   takenFrom       DateTime
//   takenUntil      DateTime
//   pricePerHour    Decimal
//   durationInHours Int
//   finalPrice      Decimal
//   parkingLocation ParkingSpot @relation(fields: [parkingSpotId], references: [id])
//   parkingSpotId   String
//   orderOwner      User        @relation(fields: [ownerId], references: [id])
//   ownerId         String
//   parkedCar       Cars        @relation(fields: [parkedCarId], references: [id])
//   parkedCarId     String
// }

model Orders {
  id              String      @id @default(dbgenerated("gen_random_uuid()"))
  takenFrom       DateTime
  takenUntil      DateTime
  pricePerHour    Decimal @db.Decimal(5, 2)
  durationInHours Int
  finalPrice      Decimal @db.Decimal(8, 2)
  parkingLocation ParkingSpot @relation(fields: [parkingSpotId], references: [id], onDelete: Cascade)
  parkingSpotId   String
  parkedCarSign   String
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
}

// model User {
//   id            String   @id @default(dbgenerated("gen_random_uuid()"))
//   firstName     String?
//   lastName      String?
//   passwordHash  String
//   email         String @unique
//   pendingOrders Orders[]
//   cars          Cars[]
// }

// model Cars {
//   id       String @id @default(dbgenerated("gen_random_uuid()"))
//   sign     String
//   carOwner User   @relation(fields: [ownerId], references: [id])
//   ownerId  String
//   pendingOrders Orders[]
// }

model Zone {
  id              String      @id @default(dbgenerated("gen_random_uuid()"))
  color String
  path MapPoint[]
}

model MapPoint {
  id              String      @id @default(dbgenerated("gen_random_uuid()"))
  lat Decimal @db.Decimal(8, 5)
  lng Decimal @db.Decimal(8, 5)
  zone   Zone @relation(fields: [zoneId], references: [id])
  zoneId String

  @@unique([zoneId, lat, lng])
}

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
